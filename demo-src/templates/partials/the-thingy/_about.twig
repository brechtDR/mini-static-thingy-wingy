<div class="card has--logo">
	<div class="card-header">
		<h1>Mini Static Thingy Wingy</h1>
	</div>
	<div class="card-body">
		<a href="https://github.com/brechtDR/mini-static-thingy-wingy" target="_blank" class="btn">
			<svg viewBox="0 0 50 50" xml:space="preserve" xmlns="http://www.w3.org/2000/svg"><path d="M30.4 40h-8v-4c-5.5 1.2-7-3-7-3-1-2-2-3-2-3-2-1.2 0-1 0-1 2 0 3 2 3 2 1.8 3 4.9 2.5 6 2 0-1 .4-2.5 1-3-4.4-.5-8-3-8-8s1-6 2-7c-.2-.5-1-2.3 0-5 0 0 2 0 4 3 1-1 4-1 5-1s4 0 5 1c2-3 4-3 4-3 1.1 2.7.2 4.5 0 5 1 1 2 2 2 7s-3.6 7.5-8 8c.6.5 1 2.2 1 3v7z" fill="currentColor"/><path d="M25 1C11.7 1 1 11.7 1 25s10.7 24 24 24 24-10.7 24-24S38.3 1 25 1zm0 43C14.5 44 6 35.5 6 25S14.5 6 25 6s19 8.5 19 19-8.5 19-19 19z" fill="currentColor"/></svg>
			Get it on GitHub
		</a>
		<h2>What's it about?</h2>
		<p>In a world full of frameworks, packages and guidelines, it's sometimes a bit of an overkill to use all of these frameworks. Sometimes you just want to create a simple page or a sandbox to play in.</p>
		<p>The Mini Static Thingy Wingy was created with just one thing in mind: An easy setup for a simple HTML and CSS driven page. This could be a landing page, a small demo, or an HTML presentation.</p>
		<p>By using Twig as a templating engine and PostCSS + Scss to handle the styling, it's a very simple setup. The Thingy is not ment to be
			<em>the next new thing</em>, it's ment to be mini, and static, to create something on the fly (wing it).</p>
			
		<h2>How to run it</h2>
		<p>Make sure you have the lateste node version installed. Simply <a href="https://github.com/brechtDR/mini-static-thingy-wingy" target="_blank">get the main directory</a> and run:</p>
		<pre>npm install</pre>
		<p>Now you are ready to build! To start watching you files for changes, run the following:</p>
		<pre>npm run dev</pre>
		<p>This will start the server and you'll already have a live reload on your index.twig file and your .scss file. In the next part, i'll go a bit more in-depth, but don't worry, it's easy</p>
		<p>When you're happy with your result and want to build this, just add the following command which will create a build folder at the root of you projects, with your HTML, CSS, JS files (and other assets):</p>
		<pre>npm run build:production</pre>
		<p>
			<strong>Note:
			</strong>The CSS is automatically injected before the closing of the head tag, whilde JS is automatically added before the closing of the body tag</p>
	</div>
</div>
